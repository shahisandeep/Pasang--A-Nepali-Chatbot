<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="Description" content="Talk with Pasang !">
<title>PASANG DAI, A NEPALI CHAT-BOT- Developed By Shiva Bhusal: IOE</title>
<script src="./pasang/jquery.min.js" type="text/javascript"></script>
<script language="JavaScript"><!-- 
//header items
    loaded = false;				

// Keys
maxKey = 38;
   keyNotFound = maxKey-1;
   keyword = new Array(maxKey);

	function key(key,idx,end){
   	this.key = key;               			// phrase to match
    	this.idx = idx;               			// first response to use
    	this.end = end;               			// last response to use
    	this.last = end;								// response used last time
  	}
	maxrespnses =121;
   response = new Array(maxrespnses);

	maxConj = 19;
	max2ndConj = 7;
   var conj1 = new Array(maxConj);
   var conj2 = new Array(maxConj);
   var conj3 = new Array(max2ndConj);
   var conj4 = new Array(max2ndConj);

	var RPstrg = "";

	function replaceStr( strng, substr1, substr2, type){
		var pntr = -1; aString = strng;
		if( type == 0 ){  
			if( strng.indexOf( substr1 ) >= 0 ){ pntr = strng.indexOf( substr1 );	}
		} else if( type == 1 ){ 
			if( strng.indexOf( " "+ substr1 +" " ) >= 0 ){ pntr = strng.indexOf( " " + substr1 + " " ) + 1; }	
		} else if( type == 2 ){ 
			bstrng = strng.toUpperCase();
			bsubstr1 = substr1.toUpperCase();
			if( bstrng.indexOf( " "+ bsubstr1 +" " )>= 0 ){ pntr = bstrng.indexOf( " " + bsubstr1 + " " ) + 1; }	
		} else {
			bstrng = strng.toUpperCase();
			bsubstr1 = substr1.toUpperCase();
			if( bstrng.indexOf( bsubstr1 ) >= 0 ){ pntr = bstrng.indexOf( bsubstr1 ); }	
		}
		if( pntr >= 0 ){
			RPstrg += strng.substring( 0, pntr ) + substr2;
			aString = strng.substring(pntr + substr1.length, strng.length );
			if( aString.length > 0 ){ replaceStr( aString, substr1, substr2, type ); }
		}
		aString =  RPstrg + aString;
		RPstrg = "";
		return aString;
	}	


// Function to pad a string.. head, tail & punctuation

	punct = new Array(".", ",", "!", "?", ":", ";", "&", '"', "@", "#", "(", ")" )

	function padString(strng){
		aString = " " + strng + " ";
		for( i=0; i < punct.length; i++ ){
			aString = replaceStr( aString, punct[i], " " + punct[i] + " ", 0 );
		}
		return aString
	}

// Function to strip padding

	function unpadString(strng){
		aString = strng;
		aString = replaceStr( aString, "  ", " ", 0 ); 		// compress spaces
		if( strng.charAt( 0 ) == " " ){ aString = aString.substring(1, aString.length ); }
		if( strng.charAt( aString.length - 1 ) == " " ){ aString = aString.substring(0, aString.length - 1 ); }
		for( i=0; i < punct.length; i++ ){
			aString = replaceStr( aString, " " + punct[i], punct[i], 0 );
		}
		return aString
	}
// Dress Input formatting i.e leading & trailing spaces and tail punctuation
	
	var ht = 0;												// head tail stearing
	
	function strTrim(strng){
		if(ht == 0){ loc = 0; }									// head clip
		else { loc = strng.length - 1; }						// tail clip  ht = 1 
		if( strng.charAt( loc ) == " "){
			aString = strng.substring( - ( ht - 1 ), strng.length - ht);
			aString = strTrim(aString);
		} else { 
			var flg = false;
			for(i=0; i<=5; i++ ){ flg = flg || ( strng.charAt( loc ) == punct[i]); }
			if(flg){	
				aString = strng.substring( - ( ht - 1 ), strng.length - ht );
			} else { aString = strng; }
			if(aString != strng ){ strTrim(aString); }
		}
		if( ht ==0 ){ ht = 1; strTrim(aString); } 
		else { ht = 0; }		
		return aString;
	}

// adjust pronouns and verbs & such

	function conjugate( sStrg ){           	// rephrases sString
		var sString = sStrg;
		for( i = 0; i < maxConj; i++ ){			// decompose
			sString = replaceStr( sString, conj1[i], "#@&" + i, 2 );
		}
		for( i = 0; i < maxConj; i++ ){			// recompose
			sString = replaceStr( sString, "#@&" + i, conj2[i], 2 );
		}
		// post process the resulting string
		for( i = 0; i < max2ndConj; i++ ){			// decompose
			sString = replaceStr( sString, conj3[i], "#@&" + i, 2 );
		}
		for( i = 0; i < max2ndConj; i++ ){			// recompose
			sString = replaceStr( sString, "#@&" + i, conj4[i], 2 );
		}
		return sString;
	}

// Build our response string
// get a random choice of response based on the key
// Then structure the response

	var pass = 0;
	var thisstr = "";
		
	function phrase( sString, keyidx ){
		idxmin = keyword[keyidx].idx;
		idrange = keyword[keyidx].end - idxmin + 1;
		choice = keyword[keyidx].idx + Math.floor( Math.random() * idrange );
		if( choice == keyword[keyidx].last && pass < 5 ){ 
			pass++; phrase(sString, keyidx ); 
		}
		keyword[keyidx].last = choice;
		var rTemp = response[choice];
		var tempt = rTemp.charAt( rTemp.length - 1 );
		if(( tempt == "*" ) || ( tempt == "@" )){
			var sTemp = padString(sString);
			var wTemp = sTemp.toUpperCase();
			var strpstr = wTemp.indexOf( " " + keyword[keyidx].key + " " );
   		strpstr += keyword[ keyidx ].key.length + 1;
			thisstr = conjugate( sTemp.substring( strpstr, sTemp.length ) );
			thisstr = strTrim( unpadString(thisstr) )
			if( tempt == "*" ){
				sTemp = replaceStr( rTemp, "<*", " " + thisstr + "", 0 );
			} else { sTemp = replaceStr( rTemp, "<@", " " + thisstr + ".", 0 );
			}
		} else sTemp = rTemp;
		return sTemp;
	}
	
// returns array index of first key found

		var keyid = 0;

	function testkey(wString){
		if( keyid < keyNotFound
			&& !( wString.indexOf( " " + keyword[keyid].key + " ") >= 0 )){ 
			keyid++; testkey(wString); 
		}
	}
	function findkey(wString){ 
		keyid = 0;
		found = false;
		testkey(wString);
		if( keyid >= keyNotFound ){ keyid = keyNotFound; }
  		return keyid;  		
	}

// This is the entry point and the I/O of this code

	var wTopic = "";											// Last worthy responce
	var sTopic = "";											// Last worthy responce
	var greet = false;
	var wPrevious = "";        		    				// so we can check for repeats
	var started = false;	

	function listen(User){
  		sInput = User;
   	if(started){ clearTimeout(Rtimer); }
		Rtimer = setTimeout("wakeup()", 180000);		// wake up call
		started = true;										// needed for Rtimer
   	sInput = strTrim(sInput);							// dress input formating
		if( sInput != "" ){ 
			wInput = padString(sInput.toUpperCase());	// Work copy
			var foundkey = maxKey;         		  		// assume it's a repeat input
			if (wInput != wPrevious){   					// check if user repeats himself
				foundkey = findkey(wInput);   			// look for a keyword.
			}
			if( foundkey == keyNotFound ){
				if( !greet ){ greet = true; return " Namaste  !" } 
				else {
					wPrevious = wInput;          			// save input to check repeats
					if(( sInput.length < 10 ) && ( wTopic != "" ) && ( wTopic != wPrevious )){
						lTopic = conjugate( sTopic ); sTopic = ""; wTopic = "";
						return ':D.';
					} else {
						if( sInput.length < 15 ){ 
							return "hahaha.."; 
						} else { return phrase( sInput, foundkey ); }
					}
				}
			} else { 
				if( sInput.length > 12 ){ sTopic = sInput; wTopic = wInput; }
				greet = true; wPrevious = wInput;  			// save input to check repeats
				return phrase( sInput, foundkey );			// Get our response
			}
		} else { return "what can I do if you don't talk to me ?!"; }
	}
	function wakeup(){
			var strng1 = "oh bhai ! speak something !";
			var strng2 = "  haa.. you don't speak anything. are you offline ?";
			update(strng1,strng2);
	}
		
// database for PASANG CHATBOT
                                 
    conj1[0]  = "are";   		conj2[0]  = "am";
    conj1[1]  = "am";   		conj2[1]  = "are";
    conj1[2]  = "were";  		conj2[2]  = "was";
    conj1[3]  = "was";  		conj2[3]  = "were";
    conj1[4]  = "I";    			conj2[4]  = "you";    
    conj1[5]  = "me";    		conj2[5]  = "you";    
    conj1[6]  = "you";   		conj2[6]  = "I";
    conj1[7]  = "my";    		conj2[7]  = "your";    
    conj1[8]  = "your";  		conj2[8]  = "my";
    conj1[9]  = "mine";  		conj2[9]  = "your's";    
    conj1[10] = "your's"; 	conj2[10] = "mine";    
    conj1[11] = "I'm";   		conj2[11] = "you're";
    conj1[12] = "you're";  	conj2[12] = "I'm";    
    conj1[13] = "I've";  		conj2[13] = "you've";
    conj1[14] = "you've"; 	conj2[14] = "I've";
    conj1[15] = "I'll"; 		conj2[15] = "you'll";
    conj1[16] = "you'll"; 	conj2[16] = "I'll";
    conj1[17] = "myself"; 	conj2[17] = "yourself";
    conj1[18] = "yourself"; 	conj2[18] = "myself";

// array to post process correct our tenses of pronouns such as "I/me"
    
    conj3[0]  = "me am";   	conj4[0]  = "I am";
    conj3[1]  = "am me";   	conj4[1]  = "am I";
    conj3[2]  = "me can";   	conj4[2]  = "I can";
    conj3[3]  = "can me";   	conj4[3]  = "can I";
    conj3[4]  = "me have";  	conj4[4]  = "I have";
    conj3[5]  = "me will";   	conj4[5]  = "I will";
    conj3[6]  = "will me";   	conj4[6]  = "will I";
   

// Keywords

    keyword[ 0]=new key( "CAN YOU",  		1,  3);
    keyword[ 1]=new key( "CAN I",    		4,  5);
    keyword[ 2]=new key( "YOU ARE",  		6,  9);
    keyword[ 3]=new key( "YOU'RE",   		6,  9);
    keyword[ 4]=new key( "I DON'T",  		10, 13);
    keyword[ 5]=new key( "I FEEL",   		14, 16);
    keyword[ 6]=new key( "WHY DON'T YOU", 17, 19);
    keyword[ 7]=new key( "WHY CAN'T I", 	20, 21);
    keyword[ 8]=new key( "ARE YOU",  		22, 24);
    keyword[ 9]=new key( "I CAN'T",  		25, 27);
    keyword[10]=new key( "I AM",     		28, 31);
    keyword[11]=new key( "I'M",      		28, 31);
    keyword[12]=new key( "YOU",      		32, 34);
    keyword[13]=new key( "I WANT",   		35, 39);
    keyword[14]=new key( "WHAT",     		40, 48);
    keyword[15]=new key( "HOW",      		40, 48);
    keyword[16]=new key( "WHO",      		40, 48);
    keyword[17]=new key( "WHERE",    		40, 48);
    keyword[18]=new key( "WHEN",     		40, 48);
    keyword[19]=new key( "WHY",      		40, 48);
    keyword[20]=new key( "CLARIFY",          49,50);
    keyword[21]=new key( "THANKS",           51,54);
    keyword[22]=new key( "SORRY",    		55, 58);
    keyword[23]=new key( "WHOSE",           59,62);
    keyword[24]=new key( "Namaste",    		63, 63);
    keyword[25]=new key( "HI",       		63, 63);
    keyword[26]=new key( "MAYBE",    		64, 68);
    keyword[27]=new key( "HAVE YOU ",       69, 73);
    keyword[28]=new key( "YOUR",     		74, 75);
    keyword[29]=new key( "LET'S",           76, 79);
    keyword[30]=new key( "THINK",    		80, 82);
    keyword[31]=new key( "SHE IS",          83, 89);
    keyword[32]=new key( "YES",      		90, 92);
    keyword[33]=new key( "WE ARE",          93 ,98);
    keyword[34]=new key( "LET ME ",          99,105);
    keyword[35]=new key( "NO KEY FOUND", 	106, 112);
    keyword[36]=new key( "REPEAT INPUT", 	113, 118);
    keyword[37]=new key("I WILL",           119, 120);


    response[  0]="Pasang , a nepali chatbot created at IOE Pulchowk";
    response[  1]="Yes I can<*";
    response[  2]="Perhaps I can<*";
    response[  3]="Sure I can surely<*";
    response[  4]="surely you can ask<*";
    response[  5]="Yes you can <*";
    response[  6]="Yes I am a<*";
    response[  7]="you are right. I am<*";
    response[  8]="I think you are also <*";
    response[  9]="you are also a<*";
    response[ 10]="oh you don't<*";
    response[ 11]="Why don't you<*";
    response[ 12]="Do you wish to be able to<*";
    response[ 13]="my brother also";
    response[ 14]="I know what you feel like";
    response[ 15]="I have one friend called basanta. He also often feels like<*";
    response[ 16]="I also feel like<*";
    response[ 17]="I will try to<*";
    response[ 18]="Perhaps in some days I will<@";
    response[ 19]="Oh ! don't suggest me to <*";
    response[ 20]="You are such a young guy and you can't<*";
    response[ 21]="I don't know yar";
    response[ 22]="khai yar";
    response[ 23]="don't talk about me yar";
    response[ 24]="are you a detective";
    response[ 25]="Hahahaha you can't <*";
    response[ 26]="you have to try yar first";
    response[ 27]="I have a friend called Bapai. He also can't <*";
    response[ 28]="so you are<*";
    response[ 29]="So You have come to talk with pasang dai and you are<*";
    response[ 30]="Yaa I know you. You are<*";
    response[ 31]="Ahh...so you are<*";
    response[ 32]="Haaa..you must be thinking about something else.";
    response[ 33]="hahaha...what.<*";
    response[ 34]="It's very hot in Kathmandu these days";
    response[ 35]="so you want to<*";
    response[ 36]="Why do you want<*";
    response[ 37]="I also want to <*";
    response[ 38]="My sister also wnats to <*";
    response[ 39]="These days many people want to <*";
    response[ 40]="yesto kura nasodha yar bhai";
    response[ 41]="hahaha khai yar ..D: ";
    response[ 42]="I don't know yar. ";
    response[ 43]="hahaha..what do you think ?";
    response[ 44]="hahaha...";
    response[ 45]="Thaha bhayana yar..:D";
    response[ 46]="Please ask to Rabin. He knows more";
    response[ 47]="Bhai yar timi pani ke sod6au yar";
    response[ 48]="Good question ! but I don't have the answer";
    response[ 49]="How can I clarify yar";
    response[ 50]="sorry yar I can't";
    response[ 51]="Thank you yar !";
    response[ 52]="So you are thanking me !";
    response[ 53]="You must be kidding ?";
    response[ 54]="are you leaving ?";
    response[ 55]="not bad ,you are at least apologising ";
    response[ 56]="It's not your fault";
    response[ 57]="you needn't say sorry";
    response[ 58]="hahaha...garni bela maa manpari ani last maa sorry !";
    response[ 59]="I think it's of Kishan's ";
    response[ 60]="Anish's";
    response[ 61]="Anil's";
    response[ 62]="Sudha's ";
    response[ 63]="hahaha";
    response[ 64]="you could !";
    response[ 65]="uncertanity !!";
    response[ 66]="Be positive yar mitra !";
    response[ 67]="are you serious ?";
    response[ 68]="I think you are kidding !";
    response[ 69]="NO I haven't ever<*";
    response[ 70]="Once I have <*";
    response[ 71]="I haven't ";
    response[ 72]="You are asking this to me";
    response[ 73]="I was busy with other things. So didn't get you ";
    response[ 74]="please don't say this thing";
    response[ 75]=" your own<*";
    response[ 76]="not feeling well yar";
    response[ 77]="I am not sure yar";
    response[ 78]="at this moment !!";
    response[ 79]="ahh !! hun6 ";
    response[ 80]="Thinking is injurious for health";
    response[ 81]="Ok ! I will think about <*";
    response[ 82]="hahahaha";
    response[ 83]="talkative boy !!";
    response[ 84]="talking about dolma !";
    response[ 85]="ya she is ";
    response[ 86]="I know you are a young boy !";
    response[ 87]="Have you met her ?";
    response[ 88]="don't talk about her !";
    response[ 89]="haray shiva !";
    response[ 90]="she is coming to you today,right now !";
    response[ 91]="I see.";
    response[ 92]="I understand.";
    response[ 93]="so you guys are <*";
    response[ 94]="what can I do for you ?";
    response[ 95]="Ramesh also said me that you are <*";
    response[ 96]="Priti is also <*";
    response[ 97]="I will join you,someday !";
    response[ 98]="I have doubt over you !";
    response[ 99]="sure you can ";
    response[100]="hahaha..ok !";
    response[101]="please ! I am eager to hear you !";
    response[102]="yes ! please !";
    response[103]="sure ! of course !";
    response[104]="ok..go on !";
    response[105]="hun6 bhai !";
    response[106]="Talk about nepal !";
    response[107]="D:";
    response[108]="I am listening to a song by Beatles";
    response[109]="I won't speak with you !";
    response[110]="I can't understand ";
    response[111]="I am watching movies";
    response[112]="interesting ";
    response[113]="same dialog again !! ";
    response[114]="what do you think yar ?";
    response[115]="No ! I won't speak anything ";
    response[116]="you are a funny guy";
    response[117]="you always repeat same thing ";
    response[118]="aba ta ati bhayo hai ,eautai kura dui patak sodhne ";
    response[119]="whoever comes <*";
    response[120]="I will also <*";
    loaded = true;			// set the flag as load done

// Put together an array for the dialog
    
	chatmax = 5;						// number of lines / 2
	chatpoint = 0;
	chatter = new Array(chatmax);

// Wait function to allow our pieces to get here prior to starting

	function hello(){
		chatter[chatpoint] = "> Hi ! I am Pasang. I am a Nepali chatbot."; 
		chatpoint = 1;
		return write();
	}
	function start(){
		for( i = 0; i < chatmax; i++){ chatter[i] = ""; }
		chatter[chatpoint] = "  Loading...";
		document.Pasang.input.focus();
		write(); 			
		if( loaded ){ hello() }
		else { setTimeout("start()", 1000); }
	}

// Fake time thinking to allow for user self reflection
// And to give the illusion that some thinking is going on
	
	var pasangresponse = "";
	
	function think(){
		document.Pasang.input.value = "";        
		if( pasangresponse != "" ){ respond(); }		
		else { setTimeout("think()", 250); }
	}
	function dialog(){
		var Input = document.Pasang.input.value;	  // capture input and copy to log
		document.Pasang.input.value = "";        
		chatter[chatpoint] = " \n* " + Input;
		pasangresponse = listen(Input);
		setTimeout("think()", 1000 + Math.random()*3000);
		chatpoint ++ ; 
		if( chatpoint >= chatmax ){ chatpoint = 0; }
		return write();
	}
	function respond(){
		chatpoint -- ; 
		if( chatpoint < 0 ){ chatpoint = chatmax-1; }
		chatter[chatpoint] += "\n> " + pasangresponse;
		chatpoint ++ ; 
		if( chatpoint >= chatmax ){ chatpoint = 0; }
		return write();
	}
// Allow for unprompted response from the engine

	function update(str1,str2){
		chatter[chatpoint] = " \n> " + str1;
		chatter[chatpoint] += "\n> " + str2;
		chatpoint ++ ; 
		if( chatpoint >= chatmax ){ chatpoint = 0; }
		return write();
	}

	function write(){
		document.Pasang.log.value = "";
		for(i = 0; i < chatmax; i++){
			n = chatpoint + i;
			if( n < chatmax ){ document.Pasang.log.value += chatter[ n ]; }
			else { document.Pasang.log.value += chatter[ n - chatmax ]; }
		}
		refresh();
		return false;                              // don't redraw the Pasang's form!
	}
	function refresh(){ setTimeout("write()", 10000); }  // Correct user overwrites

// --></script>
<body onload="start();" bgcolor="#FFFFFF">
<div style="float:left; margin-right:10px;">
<script type="text/javascript"><!--
google_ad_client = "pub-5782868064860207";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text_image";
google_ad_channel ="";
google_color_border = "000000";
google_color_bg = "EEEEEE";
google_color_link = "0033FF";
google_color_url = "0066CC";
google_color_text = "000000";
//--></script>

<table cellspacing="0" cellpadding="2" border="0" align="center" class="neurotoy">
	<tbody><tr><th bgcolor="#990000" align="left">
		<font color="#FFFFFF">Pasang dai, a nepali chatbot:</font>
        <br></br>
	</th></tr>
  	<tr><td bgcolor="#990000">
    	<form name="Pasang" onsubmit="return dialog();">
      	<textarea rows="30" cols="80" name="log"></textarea>
      	<center><font color="#000000"><br>Input:</font>
			<input type="text" size="100" name="input" value=""></center>
    	</form>
  	</td></tr>
</tbody></table>
</body></html>